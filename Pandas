#################################################################Pandas getting started
import pandas as pd

mydataset = {
  'cars': ["BMW", "Volvo", "Ford"],
  'passings': [3, 7, 2]
}

myvar = pd.DataFrame(mydataset)

print(myvar)

print(pd.__version__)

##################################################################pandas series
import pandas as pd

a = [1, 7, 2]

myvar = pd.Series(a)

print(myvar)

print(myvar[0])

import pandas as pd

a = [1, 7, 2]

myvar = pd.Series(a, index = ["x", "y", "z"])

print(myvar)
print(myvar["y"]) 
##Key/Value Objects as Series
import pandas as pd

calories = {"day1": 420, "day2": 380, "day3": 390}

myvar = pd.Series(calories)

print(myvar)

import pandas as pd

calories = {"day1": 420, "day2": 380, "day3": 390}

myvar = pd.Series(calories, index = ["day1", "day2"])

print(myvar)

###DataFrames
import pandas as pd

data = {
  "calories": [420, 380, 390],
  "duration": [50, 40, 45]
}

myvar = pd.DataFrame(data)

print(myvar)


################################################################Pandas DataFrames

import pandas as pd

data = {
  "calories": [420, 380, 390],
  "duration": [50, 40, 45]
}

#load data into a DataFrame object:
df = pd.DataFrame(data)

print(df) 
###Locate Row
#refer to the row index:
print(df.loc[0])

#use a list of indexes:
print(df.loc[[0, 1]])

###named indexes
import pandas as pd

data = {
  "calories": [420, 380, 390],
  "duration": [50, 40, 45]
}

df = pd.DataFrame(data, index = ["day1", "day2", "day3"])

print(df) 
##Locate Named Indexes
#refer to the named index:
print(df.loc["day2"])

###Load Files Into a DataFrame
import pandas as pd

df = pd.read_csv('data.csv')

print(df) 


########################################################pandas read CSV
import pandas as pd

df = pd.read_csv('data.csv')

print(df.to_string()) 

import pandas as pd

df = pd.read_csv('data.csv')

print(df) 
######max_rows
import pandas as pd

print(pd.options.display.max_rows
#####Increase the maximum number of rows to display the entire DataFrame:

import pandas as pd

pd.options.display.max_rows = 9999

df = pd.read_csv('data.csv')

print(df) 


########################################################################Read JSON
import pandas as pd

df = pd.read_json('data.json')

print(df.to_string()) 

###Dictionary as JSON
import pandas as pd

data = {
  "Duration":{
    "0":60,
    "1":60,
    "2":60,
    "3":45,
    "4":45,
    "5":60
  },
  "Pulse":{
    "0":110,
    "1":117,
    "2":103,
    "3":109,
    "4":117,
    "5":102
  },
  "Maxpulse":{
    "0":130,
    "1":145,
    "2":135,
    "3":175,
    "4":148,
    "5":127
  },
  "Calories":{
    "0":409,
    "1":479,
    "2":340,
    "3":282,
    "4":406,
    "5":300
  }
}

df = pd.DataFrame(data)

print(df) 
#############################################################Pandas - Analyzing DataFrames
###Viewing the Data
import pandas as pd

df = pd.read_csv('data.csv')

print(df.head(10))

import pandas as pd

df = pd.read_csv('data.csv')

print(df.head())

print(df.tail()) 
print(df.info()) 
#####The info() 
method also tells us how many Non-Null values there are present in each column, 
and in our data set it seems like there are 164 of 169 Non-Null values in the 
"Calories" column

####################################################################Pandas - Cleaning Data
####Remove Rows
import pandas as pd

df = pd.read_csv('data.csv')

new_df = df.dropna()

print(new_df.to_string())

import pandas as pd

df = pd.read_csv('data.csv')

df.dropna(inplace = True)

print(df.to_string())

##################################Replace Empty Values
import pandas as pd

df = pd.read_csv('data.csv')

df.fillna(130, inplace = True)
#################################Replace Only For Specified Columns
import pandas as pd

df = pd.read_csv('data.csv')

df["Calories"].fillna(130, inplace = True)
############################################Replace Using Mean, Median, or Mode
import pandas as pd

df = pd.read_csv('data.csv')

x = df["Calories"].mean()

df["Calories"].fillna(x, inplace = True)

import pandas as pd

df = pd.read_csv('data.csv')

x = df["Calories"].median()

df["Calories"].fillna(x, inplace = True)

import pandas as pd

df = pd.read_csv('data.csv')

x = df["Calories"].mode()[0]

df["Calories"].fillna(x, inplace = True)

############################################################Pandas - Cleaning Data of Wrong Format
####Convert Into a Correct Format

import pandas as pd

df = pd.read_csv('data.csv')

df['Date'] = pd.to_datetime(df['Date'])

print(df.to_string())
####Removing Rows

df.dropna(subset=['Date'], inplace = True)

################################################################Pandas - Fixing Wrong Data
##Replacing Values
df.loc[7, 'Duration'] = 45 #Set "Duration" = 45 in row 7:


#Loop through all values in the "Duration" column.
If the value is higher than 120, set it to 120:
for x in df.index:
  if df.loc[x, "Duration"] > 120:
    df.loc[x, "Duration"] = 120



#Delete rows where "Duration" is higher than 120:
for x in df.index:
  if df.loc[x, "Duration"] > 120:
    df.drop(x, inplace = True)

####################################################Pandas - Removing Duplicates
print(df.duplicated()) #Returns True for every row that is a duplicate, othwerwise False:

df.drop_duplicates(inplace = True)
#####################################################Correlation
df.corr()
######################################################plotting
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data.csv')

df.plot()

plt.show()
#Pandas uses the plot() method to create diagrams.

######Scatter Plot
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('data.csv')

df.plot(kind = 'scatter', x = 'Duration', y = 'Calories')

plt.show()

##Histogram
df["Duration"].plot(kind = 'hist')

























